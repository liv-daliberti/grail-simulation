#!/usr/bin/env python
# Copyright 2025 The Grail Simulation Contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Catalog README builder for the KNN pipeline reports."""

from __future__ import annotations

from pathlib import Path
from common.report_utils import extend_with_catalog_sections, start_markdown_report


def _build_catalog_report(
    reports_root: Path,
    include_next_video: bool,
    include_opinion: bool,
) -> None:
    """
    Create the catalog README summarising generated artefacts.

    :param reports_root: Filesystem directory that will receive the Markdown reports.
    :type reports_root: Path
    :param include_next_video: Flag signalling whether next-video report sections
        should be rendered.
    :type include_next_video: bool
    :param include_opinion: Flag signalling whether opinion report sections should
        be rendered.
    :type include_opinion: bool
    """
    path, lines = start_markdown_report(reports_root, title="KNN Report Catalog")
    lines.append("Baseline: KNN slate-ranking and opinion-regression models.")
    lines.append(
        "Feature spaces include TF-IDF, Word2Vec, and Sentence-Transformer representations."
    )
    lines.append("")
    lines.append(
        "These summaries are regenerated by `python -m knn.pipeline` (or the training wrappers)."
    )
    lines.append("Each report captures the latest KNN baseline performance at a glance.")
    extend_with_catalog_sections(
        lines,
        include_next_video=include_next_video,
        include_opinion=include_opinion,
        reports_prefix="knn",
    )
    lines.append("")
    lines.append(
        "All referenced Markdown artifacts live under `models/knn/next_video` or "
        "`models/knn/opinions`. Re-running the pipeline refreshes them with new metrics."
    )
    lines.append("")
    lines.append("## Refreshing Reports")
    lines.append("")
    lines.append("```bash")
    lines.append("PYTHONPATH=src python -m knn.pipeline --stage full \\")
    lines.append("  --out-dir models/knn \\")
    lines.append("  --reports-dir reports/knn")
    lines.append("```")
    lines.append("")
    lines.append(
        "Use `--stage plan` to inspect the sweep grid and `--stage sweeps` for array execution."
    )
    lines.append("Run `--stage reports` to rebuild documentation from existing metrics.")
    lines.append("")
    path.write_text("\n".join(lines), encoding="utf-8")


__all__ = ["_build_catalog_report"]
